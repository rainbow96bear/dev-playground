package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.62

import (
	"context"
	"dev-playground/chat/graphQL/graph"
	"dev-playground/chat/graphQL/resolver/types"
	"fmt"
)

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, login types.Login) (*types.UserInfo, error) {
	
	panic(fmt.Errorf("not implemented: Login - login"))
}

// AddUser is the resolver for the addUser field.
func (r *mutationResolver) AddUser(ctx context.Context, userInfo types.UserInput) (*types.UserInfo, error) {
	panic(fmt.Errorf("not implemented: AddUser - addUser"))
}

// AddFriend is the resolver for the addFriend field.
func (r *mutationResolver) AddFriend(ctx context.Context, userID string) (*types.UserInfo, error) {
	panic(fmt.Errorf("not implemented: AddFriend - addFriend"))
}

// CreateChatRoom is the resolver for the createChatRoom field.
func (r *mutationResolver) CreateChatRoom(ctx context.Context, userID string) (*types.ChatRoom, error) {
	panic(fmt.Errorf("not implemented: CreateChatRoom - createChatRoom"))
}

// SendMessage is the resolver for the sendMessage field.
func (r *mutationResolver) SendMessage(ctx context.Context, message types.MessageInput) (*types.Message, error) {
	panic(fmt.Errorf("not implemented: SendMessage - sendMessage"))
}

// SearchUser is the resolver for the searchUser field.
func (r *queryResolver) SearchUser(ctx context.Context, userID string) (*types.UserInfo, error) {
	panic(fmt.Errorf("not implemented: SearchUser - searchUser"))
}

// FriendsList is the resolver for the FriendsList field.
func (r *queryResolver) FriendsList(ctx context.Context, userID string) ([]*types.UserInfo, error) {
	panic(fmt.Errorf("not implemented: FriendsList - FriendsList"))
}

// ChatRooms is the resolver for the ChatRooms field.
func (r *queryResolver) ChatRooms(ctx context.Context, userID string) ([]*types.ChatRoom, error) {
	panic(fmt.Errorf("not implemented: ChatRooms - ChatRooms"))
}

// ChatMessages is the resolver for the ChatMessages field.
func (r *queryResolver) ChatMessages(ctx context.Context, chatRoomID string) ([]*types.Message, error) {
	panic(fmt.Errorf("not implemented: ChatMessages - ChatMessages"))
}

// MessageSent is the resolver for the messageSent field.
func (r *subscriptionResolver) MessageSent(ctx context.Context, to string) (<-chan *types.Message, error) {
	panic(fmt.Errorf("not implemented: MessageSent - messageSent"))
}

// Mutation returns graph.MutationResolver implementation.
func (r *Resolver) Mutation() graph.MutationResolver { return &mutationResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

// Subscription returns graph.SubscriptionResolver implementation.
func (r *Resolver) Subscription() graph.SubscriptionResolver { return &subscriptionResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
type subscriptionResolver struct{ *Resolver }
